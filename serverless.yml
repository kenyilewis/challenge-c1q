service: lambda-card
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  # stage: ${opt:stage, 'dev'}
  # environment:
  #   NODE_ENV: ${opt:stage, self:provider.stage}
    # CLIENT_PK: ${ssm/CLIENT_PK}
  # httpApi:
  #   authorizers:
  #     customAuthorizer:
  #       type: request
  #       functionName: src/auth/authorizer.authorizerHandler
  #       identityValidationExpression: Bearer.*
  #       identitySource: $request.header.Authorization

custom:
  serverless-offline:
    printOutput: true
    cacheInvalidationRegex: 'node_modules/'
    # host: 0.0.0.0
    port: 3000
  esbuild:
    bundle: true
    minify: true

functions:
  getCard:
    handler: handlers.getCardHandler
    events:
      - httpApi:
          path: /cards/{token}
          method: get
          # authorizer:
          #   name: customAuthorizer

  createCard:
    handler: handlers.createCardHandler
    events:
      - httpApi:
          path: /tokens
          method: post
          # authorizer:
          #   name: customAuthorizer
          

plugins:
  - serverless-offline
  - serverless-esbuild
